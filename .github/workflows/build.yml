name: Build agents

on:
  schedule:
    - cron:  '44 21 */2 * *'
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force build'
        required: false
        default: 'no'
        type: choice
        options:
          - "no"
          - "yes"

jobs:
  check:
    name: Check for new acme-dns release
    runs-on: ubuntu-latest
    outputs:
      last-release-name: ${{ steps.release.outputs.last-release-name }}
      last-release-date: ${{ steps.release.outputs.last-release-date }}
      saved-release-date: ${{ steps.saved.outputs.saved-release-date }}
      saved-image-build-date: ${{ steps.saved.outputs.saved-image-build-date }}
      days-since-last-image-build: ${{ steps.release.outputs.days-since-last-image-build }}

    steps:
      - name: Checkout workflow branch
        uses: actions/checkout@v5
        with:
          ref: gh-workflows

      - id: saved
        name: Read previously saved release and image build date
        run: |
          if [ -f "./gh-workflow_release-date.txt" ]; then
            SAVED_RELEASE_DATE=$(cat ./gh-workflow_release-date.txt)
          else
            SAVED_RELEASE_DATE="none"
          fi
          echo "saved-release-date=$SAVED_RELEASE_DATE" >> "$GITHUB_OUTPUT"

          if [ -f "./gh-workflow_image-build-date.txt" ]; then
            SAVED_IMAGE_BUILD_DATE=$(cat ./gh-workflow_image-build-date.txt)
          else
            SAVED_IMAGE_BUILD_DATE="none"
          fi
          echo "saved-image-build-date=$SAVED_IMAGE_BUILD_DATE" >> "$GITHUB_OUTPUT"
          echo "SAVED_IMAGE_BUILD_DATE=$SAVED_IMAGE_BUILD_DATE" >> "$GITHUB_ENV"

      - id: release
        name: Fetch latest release info
        run: |
          REPO="joohoi/acme-dns"
          RELEASE_JSON=$(curl -s "https://api.github.com/repos/$REPO/releases/latest")

          LAST_RELEASE_NAME=$(jq -r '.name' <<< "$RELEASE_JSON")
          LAST_RELEASE_DATE=$(jq -r '.published_at' <<< "$RELEASE_JSON")

          echo "last-release-name=$LAST_RELEASE_NAME" >> "$GITHUB_OUTPUT"
          echo "last-release-date=$LAST_RELEASE_DATE" >> "$GITHUB_OUTPUT"

      - id: days-since-build
        name: get number of days since last image build
        run: |
          DAYS_SINCE_LAST_IMAGE_BUILD=$(( ( $(date +%s) - $(date -d "$SAVED_IMAGE_BUILD_DATE" +%s) )/(60*60*24) ))
          echo "days-since-last-image-build=$DAYS_SINCE_LAST_IMAGE_BUILD" >> "$GITHUB_OUTPUT"

  build:
    name: Build job
    needs: check
    runs-on: ubuntu-latest
    if: |
      needs.check.outputs.last-release-date != needs.check.outputs.saved-release-date ||
      needs.check.outputs.days-since-last-image-build > 50 ||
      github.event.inputs.force_build == 'yes'
    steps:
      - name: Clone Repository
        uses: actions/checkout@v5
        with:
          repository: joohoi/acme-dns

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64, linux/arm/v6, linux/arm/v7, linux/arm64/v8
          push: true
          tags: glopix/acme-dns-multiarch:latest, glopix/acme-dns-multiarch:${{ needs.check.outputs.last-release-name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v5
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          short-description: ${{ github.event.repository.description }}

  save-build-info:
    name: save build info
    needs: [check, build]
    runs-on: ubuntu-latest
    if: needs.build.result == 'success' && needs.build.result != 'skipped'
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
    steps:
      - uses: actions/checkout@v5
        with:
          repository: ${{ github.repository }}
          ref: gh-workflows

      - name: save last image build date and release date to files
        run: |
            TODAY=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
            echo "$TODAY" > ./gh-workflow_image-build-date.txt
            echo "${{ needs.check.outputs.last-release-date }}" > ./gh-workflow_release-date.txt

      - name: Commit updated release data
        uses: stefanzweifel/git-auto-commit-action@v7
        with:
          branch: gh-workflows
          file_pattern: 'gh-workflow_*.txt'
          commit_message: "Update stored release info"
          commit_user_name: GitHub Actions Bot
          commit_user_email: github-actions-bot@none.dom
          commit_author: GitHub Actions Bot <github-actions-bot@none.dom>
          create_branch: true
